#!/bin/csh
#
# mods1 - start/stop/check MODS1 instrument services - observer version
#
# usage: mods1 {start|stop} {modsUI|gui}
#        mods1 {status}
#        mods1 {temps}
#
# This version is for use by partner observing accounts, and allows
# start/stop access to a limited subset of MODS services.  For access
# to the full-range of MODS services, you need to be the logged into
# the MODS host machines.  We limit services to those most routinely
# required by unprivileged observers.
#
# R. Pogge, OSU Astronomy Dept
# pogge.1@osu.edu
# 2010 June 20
#
# Modification History:
#   2010 Sep 19 - added gui option to launch the control panel [rwp/osu]
#   2011 Jan 16 - minor updates and enhancements for observers [rwp/osu]
#   2011 Jan 18 - reduced-version for partner observing accounts [rwp/osu]
#   2011 Mar 17 - added tcs/lbttcs to allowed processes [rwp/osu]
#   2025 Oct 13 - updated for the Archon CCD controller system [rwp/osu]
#
#---------------------------------------------------------------------------

# check if the current user is allowed to run this program

set user=`echo $USER | tr '[:upper:]' '[:lower:]'`

if ("${user}" == "osurc" || "${user}" == "inaf" || "${user}" == "lbtb" || "${user}" == "queue") then
  set user="observer"
else if ("${user}" == "lbto") then
  set user="mods"
else
  printf "ERROR: User '${user}' is not permitted to run this program.\n"
  printf "       Ask your ISP for assistance with this operation.\n"
  exit 1
endif

# Another check is if the user has an ssh key

set keys=`dirname $0`
set keys=`realpath ${keys}`
set keys="${keys}/../keys/id_ecdsa_${user}"

if ( ! -e "${keys}" ) then
  printf "ERROR: user '${user}' is not authorized to run this program!\n"
  exit 1
endif

# MODS1 instrument server (Archon system)

set mods1Host = 192.168.139.130

# Usage message 

set usage = "mods1 {start|stop} {modsUI|gui}\n       mods1 {status}\n       mods1 {temps}\n"

# Process the command-line arguments

if ($#argv == 1) then
   switch ($1)
   case 'status':
      ssh -i ${keys} ${user}@${mods1Host} /home/dts/mods/bin/modsStatus
      breaksw

   case 'temps':
      printf "MODS1 Environmental Sensors:\n"
      ssh -i ${keys} ${user}@${mods1Host} /usr/local/bin/vueinfo env
      breaksw
   
   default:
      printf "\nERROR: unrecognized directive ${1}\n"
      printf "Usage: $usage\n"
      exit 1
      breaksw
   endsw

else if ($#argv == 2) then
   switch ($2)

   # These directives are executed on mods1Host

   case 'modsUI':
   case 'gui':
      ssh -i ${keys} -X -f ${user}@${mods1Host} /home/dts/bin/modsGUI $1
      breaksw

   # These directives are restricted

   case 'mmc':
   case 'agw':
   case 'imcs':
      printf "\nERROR: Restricted directive '${1} ${2}' requested.\n"
      printf "       Please request assistance from your ISA for this operation.\n"
      printf "\nUsage: $usage\n" 
      breaksw
   
   default:
      printf "\nERROR: Unrecognized directive ${1} ${2}\n"
      printf "Usage: $usage\n" 
      breaksw

   endsw
else
   printf "\nUsage: $usage\n"
endif

exit 0
