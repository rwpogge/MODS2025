/*!
  \mainpage hatch.plc - hatch PLC program

  \author Staff, OSU Dept. of Astronomy (rgonzale@astronomy.ohio-state.edu)
 
  \date 2007 Feb 02
  
  \section Usage
  
  Usage: Multi-level command set used with MODS and ISL systems
	 or Window IMS system
  
  Where: \c MODS instrument
  
  \section Introduction
	Small command set the key words are -
		initial: Initialize Hatch
		   open: Send open to position 0.000
		  close: Send close position oposite of home.
		   stop: Stop all mechanism movement
		 relbrk: Release break
		 setbrk: Set break

	NOTE: One(1) user unit = 200 steps
	NOTE2: To run a test set COUNT=n then EXEC LOOPIT

	All other motion parameters are documented:
	(MicroLYNX Part III Software Reference)

<pre>
2007 Feb 02 - new application [rdg]
2008 June 20 - Added Timer, Unit Counter, and Trip wire [rdg]
2008 Aug 14 - added pwrfail variables [rdg]
2009 May 07 - AJARERR2 function re-written [rdg]
</pre>

\todo

<ul>
</ul>
*/
/*!
  \file hatch.plc
  \brief Small command set for hatch mechanism
*/
/** END HEADER **/
'Drven=0       'Disable Motor Until User Inputs New Target
'Motion Parameters
 MSEL=10	'10 microsteps per step
 MUNIT=2000	'units to revs
 MAC=50		'accel current is 0.50 * 7
 MRC=40		'run current is 0.40 * 7
 MHC=0		'hold current is zero
 HCDT=500	'hold current delay msec	
 ACLT=1		'linear acceleration
 ACCL=50		'acceleration rate in rev/sec^2
 DECL=ACCL	'deceleration rate in rev/sec^2
 LDECL=500	'max deceleration
'
'
'Input & Output Configuration
IOS 21=13,0,0	'CW limit
IOS 22=14,0,0	'CCW limit
'
'Variable Declarations
VAR VNORM=2.0		'Normal Speed
VAR VSLOW=0.50		'Slewing Speed
VAR VSEEK=0.50		'Seeking Speed
VM=VNORM		'Move Velocity in rev/sec
VAR STEPOPEN=-0.25	'CW Trip position
VAR STEPCLOS=-2.50	'CCW Trip position
VAR INITPOS=-2.75		'Initialize position
VAR TTIME=4000		'Timer 4secs
VAR COUNT=0		'Used for cycle counts for test
VAR T_DELAY=500		'Default delay for cycle test
VAR PWRFAIL=1		'IEB Power check(Power Failures of any kind)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Pgm 100		'program starts at address 100
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		LOOPIT PROCEDURE
' Cycle Tester
LBL LOOPIT
'
  BR PWRERR, PWRFAIL=1	'Check for Power Failure or was turned off/on
' As long as COUNT>0 Continue
  BR END_IT, COUNT=0
'
' Open the hatch
  CALL OPEN
  DELAY T_DELAY
'
' Close the hatch
  CALL CLOSE
  DELAY T_DELAY
  DEC COUNT	'Decrement the counter in cycle test
'
BR LOOPIT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		INITIAL PROCEDURE
'INITIALize the controller to it's defaults
LBL INITIAL
'
  PWRFAIL=0		'Reset Power Failure variable
  BR BITERR, IO 21+IO 22=2 'Check io b21 and b22 both high:on:1 not allow
  BR CLINIT, IO 22=1	   'Check io b22 if already closed
  SLEW -VSLOW,0
  HOLD 2
  DELAY 100
  POS=INITPOS	'Initialize position
  PRINT "CLOSED"
BR END_IT	'branch to exit
'
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               OPEN(or home) PROCEDURE
' o If opened, stop let user know
' o If CW(b21), and CCW(b22) are high:on:1 give error
' o Make sure hatch is closed before opening
'	o If not completely closed, try closing
'	o If unsucessful closing, stop and give error
' o If unsucessful opening, stop and give error message
'
LBL OPEN
  VM=VNORM
  BR PWRERR, PWRFAIL=1		'Check for Power Failure or was turned off/on
'
' Interigate IO 21 and IO 22, these are the CW(OPEN) and CCW(CLOSE) limits
  BR AJARERR, IO 21+IO 22=0	'Hatch is Ajar
'  CALL AJARERR2, IO 21+IO 22=0	'Hatch is Ajar
  BR BITERR, IO 21+IO 22=2	'Check io b21 and b22 both high:on:1 not allow
  BR IOFAIL, IO 21=1		'Check CW(OPEN) on starting position
'
  TP1=STEPOPEN,SCNT1	'Configure with user units
  TPE1=1		'Enable user units
'
  TT1=TTIME,TIMER1	'Configure to trip in TTIME milliseconds
  TTE1=1		'Enable timeout
'
  SLEW VNORM,0		'slew to to set position 0.000
  HOLD 2		'suspend procedure until move is complete
  SLEW VSEEK,0		'sneak-up on the limit
  HOLD 2		'suspend procedure until move is complete
  POS=0.0
  PRINT "OPEN"
BR END_IT, COUNT=0    	'branch to exit
RET
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               CLOSE(close) PROCEDURE
' o If closed, stop let user know
' o If CW(b21), and CCW(b22) are high:on:1 give error
' o Make sure hatch is opened before closing
'	o If not completely opened, try opening
'	o If unsucessful opening, stop and give error
' o If unsucessful closing, stop and give error message
'
LBL CLOSE
  VM=VNORM
  BR PWRERR, PWRFAIL=1  	'Check for Power Failure or was turned off/on
'
' Interigate IO 21 and IO 22, these are the CW(OPEN) and CCW(CLOSE) limits
  BR AJARERR, IO 21+IO 22=0	'Hatch is Ajar
'  CALL AJARERR2, IO 21+IO 22=0	'Hatch is Ajar
  BR BITERR, IO 21+IO 22=2	'Check io b21 and b22 both high:on:1 not allow
  BR IOFAIL, IO 22=1		'Check CCW(CLOSE) on starting position
'
  TP2=STEPCLOS,SCNT1	'Configure with user units
  TPE2=1		'Enable user units
'
  TT1=TTIME,TIMER1	'Configure to trip in TTIME milliseconds
  TTE1=1		'Enable timeout
'
  SLEW -VNORM,0		'slew to CLOSE position
  HOLD 2		'suspend procedure until move is complete
  SLEW -VSEEK,0		'sneak-up on limit
  HOLD 2		'suspend procedure until move is complete
  PRINT "CLOSED"
BR END_IT, COUNT=0	'branch to exit
RET
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               BITERRor(io error) PROCEDURE
' BITERR Both bits 21 and 22 "ON" not allowed.
LBL BITERR
  PRINT "? FAULT Sensor Fault, both limits asserted"
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               CLINIT PROCEDURE
' CLINIT Both bit 22 "ON" already closed or reset
LBL CLINIT
 POS=INITPOS	'Initialize position
 PRINT "CLOSE Already in reset position"
' PRINT "CLOSED"
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		PWRERR(power failure error) PROCEDURE
' I'm indicating a power failure
LBL PWRERR
  PRINT "? PWRFLR power failure, re-cycled or turned off (reset)"
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               AJARERRor(io error) PROCEDURE
' AJARERR Check for the hatch ajar.
LBL AJARERR
  PRINT "? AJAR The hatch is partially open, please reset"
BR END_IT
'
LBL AJARERR2 'We might try to correct this problem in the future.
' Check belt backlash or belt tension. temperature dependent? Maybe.
  VM=VSEEK
  MOVR -0.1
  HOLD 2
  VM=VNORM
  BR RETURN, IO 21+IO 22=1
  VM=VSEEK
  MOVR 0.2
  HOLD 2
  VM=VNORM
  BR RETURN, IO 21+IO 22=1
  PRINT "? AJAR The hatch is partially open, please reset"
BR END_IT
LBL RETURN
RET
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               TIMER1 PROCEDURE
' Timed out. We cannot go on forever.
LBL TIMER1
  PRINT "? UNKNOWN request timed out"
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               IOFAIL PROCEDURE
' IO has failed or already there PROCEDURE
LBL IOFAIL
  BR OCREADY, IO 21=1
   BR PWRERR, PWRFAIL=1  'Check for Power
    PRINT "CLOSED"
BR END_IT
'
LBL OCREADY
  PRINT "OPEN"
'    PWRFAIL=0
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               StepCouNT1 PROCEDURE
' Close or Open not reached
LBL SCNT1		'user units
  SSTP 0
RET
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               HatchSTATUS PROCEDURE
' Status information
LBL HSTATUS
  BR BITERR, IO 21+IO 22=2	'Check io b21 and b22 both high:on:1 not allow
  BR AJARERR, IO 21+IO 22=0	'Hatch is ajar
'  CALL AJARERR2, IO 21+IO 22=0	'Hatch is ajar
  BR CLOSE_S, IO 22=1
    PRINT "OPEN"
    BR END_IT
'
LBL CLOSE_S
  PRINT "CLOSED"
BR END_IT
' 
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               END_IT(exit) PROCEDURE
' END of Main PLC Ladder Logic Code
LBL END_IT       'Exit
  SSTP 1
END              'end the procedures
PGM              'end of program in RAM
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''' ISL PGM STARTED '''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		ISL PLC Ladder Logic PROCEDURES
PGM 6000

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                WHO AM I PROCEDURE
LBL WHO
  PRINT "hatch"
BR END_PLC
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                CHKPOS PROCEDURE check position
LBL CHKPOS
  PRINT POS
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                POLL THE CONTROLLER PROCEDURE
LBL POLL
  PRINT "POS=",POS," : b26-21=",IO 26,IO 25,IO 24,IO 23,IO 22,IO 21
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                CODE VERSION PROCEDURE
LBL CODEV
  PRINT "code ver = 0.1(latest)"
BR END_PLC      'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                IO20 PROCEDURE for bits 26 - 21
' Check IO 20 bits
LBL IO20
  PRINT IO 26,IO 25,IO 24,IO 23,IO 22,IO 21
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                IO20MASK PROCEDURE
' Check the Select, Insert bit mask 24-21
LBL IO20MASK
  VAR B21=IO 21*8 
  VAR B22=IO 22*4 
  VAR B23=IO 23*2 
  VAR B24=IO 24
  VAR BITMASK=B21+B22+B23+B24
  PRINT BITMASK
BR END_PLC
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                IO2122 PROCEDURE for cw and ccw bits 21,22
' Check limit switches
LBL IO2122
  PRINT IO 21," ",IO 22
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		END_PLC PROCEDURE
' END of ISL PLC code
LBL END_PLC		
END 
PGM
