/*!
  \mainpage hatch.plc - hatch PLC program

  \author Staff, OSU Dept. of Astronomy (rgonzale@astronomy.ohio-state.edu)
 
  \date 2007 Feb 02
  
  \section Usage
  
  Usage: Multi-level command set used with MODS and ISL systems
	 or Window IMS system
  
  Where: \c MODS instrument
  
  \section Introduction
	Small command set the key words are -
		initial: Initialize Hatch
		   open: Send open to position 0.000
		  close: Send close position oposite of home.
		   stop: Stop all mechanism movement
		 relbrk: Release break
		 setbrk: Set break

	NOTE: One(1) user unit = 200 steps
	NOTE2: PRINT statment has a number with a space example:
		PRINT "0 ",Value or PRINT "0 string"
		0=OK, 1=ERROR, 2=FATAL 3=WARNING

	All other motion parameters are documented:
	(MicroLYNX Part III Software Reference)

<pre>
2007 Feb 02 - new application [rdg]
2008 June 20 - Added Timer, Unit Counter, and Trip wire [rdg]
2008 Aug 14 - added pwrfail variables [rdg]
</pre>

\todo

<ul>
</ul>
*/
/*!
  \file hatch.plc
  \brief Small command set for hatch mechanism
*/
/** END HEADER **/
' Start here with PLC Ladder Logic Code
' Motion Configuration
MSEL=10
MUNIT=2000
MAC=50
MRC=40
MHC=0
HCDT=500
ACLT=1
ACCL=50		'acceleration rate in rev/sec^2
DECL=ACCL	'acceleration rate = deceleration rate
LDECL=500	'set decel after a limit is asserted
'
' Input & Output Configuration
IOS 21=13,0,0	'POSITIVE (CW) limit,active low,
IOS 22=14,0,0	'NEGATIVE (CCW)limit, active low
IOS 26=0	'Brake relay coil (internal pull-up switch opened)
		'Output defaults to NO, Brake wired to NO contacts on relay
		'Brake is applied with power off and default state of
		'drive output
' Variable Declarations
VAR VNORM=2.0   	'2 rev/sec running speed
VAR VSLOW=0.50		'.5 rev/sec running speed
VAR VSEEK=0.25		'.25 rev/sec running speed
VM=VNORM
VAR MODSERR		'MODS errors
VAR STEPOPEN=-.50	'-0.50 user units(revs)
VAR STEPCLOS=-2.75	'-2.75 user units(revs)
VAR TTIME=4000		'Timer 4 secs
'
VAR COUNT=0		'Cycle count
VAR T_DELAY=500		'Cycle delay
VAR PWRFAIL=1		'Power Failures of any kind
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               'STARTUP MODE
' PLC starts at address #100
'
PGM 100		'Starts at address 100
'
LBL LOOPIT
  BR END_IT, COUNT=0
  CALL OPEN
  DELAY T_DELAY
  CALL CLOSE
  DELAY T_DELAY
  DEC COUNT
BR LOOPIT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               INITIAL(initializing) - HOME PROCEDURES
' INITIALize or RESET mechanism,  Reset HATCH mechanism (CLOSE)
' Hatch closes differently then the other mechanisms on a reset
' In the case of HATCH zero is at OPEN position and reset for hatch 
' is CLOSE.
'
LBL INITIAL
  PWRFAIL=0			'Reset Power Failure variable
  BR BITERR, IO 21+IO 22=2	'Check io b21 and b22 both high:on:1 not allow
  SLEW -VSLOW,0
  HOLD 2
  PRINT "0 HATCH RESET Successful, HATCH=CLOSE"
  POS=-3.157
BR END_IT		'branch to exit
'
'
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               OPEN(or home) PROCEDURE
' o If opened, stop let user know
' o If CW(b21), and CCW(b22) are high:on:1 give error
' o Make sure hatch is closed before opening
'	o If not completely closed, try closing
'	o If unsucessful closing, stop and give error
' o If unsucessful opening, stop and give error message
'
LBL OPEN
  VM=VNORM
  BR PWRERR, PWRFAIL=1		'Check for Power Failure or was turned off/on
'
' Interigate IO 21 and IO 22, these are the CW(OPEN) and CCW(CLOSE) limits
  BR AJARERR, IO 21+IO 22=0	'Hatch is Ajar
  BR BITERR, IO 21+IO 22=2	'Check io b21 and b22 both high:on:1 not allow
  BR IOFAIL, IO 21=1		'Check CW(OPEN) on starting position
'
  TP1=STEPOPEN,SCNT1	'Configure with user units
  TPE1=1		'Enable user units
'
  TT1=TTIME,TIMER1	'Configure to trip in TTIME milliseconds
  TTE1=1		'Enable timeout
'
  SLEW VNORM,0		'slew to to set position 0.000
  HOLD 2		'suspend procedure until move is complete
  SLEW VSEEK,0		'sneak-up on the limit
  HOLD 2		'suspend procedure until move is complete
  POS=0.0
  PRINT "0 HATCH=OPEN"
BR END_IT, COUNT=0    	'branch to exit
RET
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               CLOSE(close) PROCEDURE
' o If closed, stop let user know
' o If CW(b21), and CCW(b22) are high:on:1 give error
' o Make sure hatch is opened before closing
'	o If not completely opened, try opening
'	o If unsucessful opening, stop and give error
' o If unsucessful closing, stop and give error message
'
LBL CLOSE
  VM=VNORM
  BR PWRERR, PWRFAIL=1  	'Check for Power Failure or was turned off/on
'
' Interigate IO 21 and IO 22, these are the CW(OPEN) and CCW(CLOSE) limits
  BR AJARERR, IO 21+IO 22=0	'Hatch is Ajar
  BR BITERR, IO 21+IO 22=2	'Check io b21 and b22 both high:on:1 not allow
  BR IOFAIL, IO 22=1		'Check CCW(CLOSE) on starting position
'
  TP2=STEPCLOS,SCNT1	'Configure with user units
  TPE2=1		'Enable user units
'
'  TI1=22,TRIPPED	'Trip on IO 22
'  TIE1=1		'Enable Trip wire
'
  TT1=TTIME,TIMER1	'Configure to trip in TTIME milliseconds
  TTE1=1		'Enable timeout
'
  SLEW -VNORM,0		'slew to CLOSE position
  HOLD 2		'suspend procedure until move is complete
  SLEW -VSEEK,0		'sneak-up on limit
  HOLD 2		'suspend procedure until move is complete
  PRINT "0 HATCH=CLOSED"
BR END_IT, COUNT=0    	'branch to exit
RET
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Subroutines to end Ladder Logic
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		STOP(halt) PROCEDURE
'
LBL STOP
BR END_IT		'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               BITERRor(io error) PROCEDURE
' BITERR Both bits 21 and 22 "ON" not allowed.
'
LBL BITERR
  PRINT "2 HATCH Sensor Fault, both limits asserted, HATCH=FAULT"
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		PWRERR(power failure error) PROCEDURE
' I'm indicating a power failure
'
LBL PWRERR
  PRINT "1 HATCH power failure or turned off (reset), HATCH=PWRFLR"
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               AJARERRor(io error) PROCEDURE
' AJARERR Check for the hatch being opened or closed before
' proceeding
'
LBL AJARERR
  PRINT "1 The dark hatch is partially open, please reset, HATCH=AJAR"
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               TRIPPED(io error) PROCEDURE
' TRIPPED on a CW or CCW bit. 21 or 22 repectively
' //!<o If hatch completed return to caller
' //!<o If hatch was tripped early
'	//!<o Stop operation (open or close)
'	//!<o End and give an error message 
'
LBL TRIPPED
  BR CW21, IO 21=1
  PRINT "1 CCW Limit tripped"
BR END_IT
'
LBL CW21
  PRINT "1 CW Limit tripped"
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               TIMER1 PROCEDURE
' Timed out. We cannot go on forever.
'
LBL TIMER1
  PRINT "1 HATCH request timed out, HATCH=UNKNOWN"
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Return Subroutines
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		SETBRaKe PROCEDURE
' Set brake
LBL SETBRK
  IO 26=0
RET 
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               RELeaseBRaKe PROCEDURE
' release the brake.
'
LBL RELBRK
  IO 26=1
RET
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               IOFAIL PROCEDURE
' IO has failed or already there PROCEDURE
'
LBL IOFAIL
  BR OCREADY, IO 21=1
   BR PWRERR, PWRFAIL=1  'Check for Power Failure or was turned off
    PRINT "0 HATCH=CLOSED"
BR END_IT
'
LBL OCREADY
  PRINT "0 HATCH=OPEN"
'    PWRFAIL=0
BR END_IT
'
LBL RESETERR
  PRINT "0 HATCH Already in reset state, HATCH=CLOSE"
BR END_IT
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               StepCouNT1 PROCEDURE
' Close or Open not reached
'
LBL SCNT1		'user units
  SSTP 0
RET
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               HatchSTATUS PROCEDURE
' Status information
'
LBL HSTATUS
  BR BITERR, IO 21+IO 22=2
  BR AJARERR, IO 21+IO 22=0
  BR CLOSE_S, IO 22=1
    PRINT "0 HATCH=OPEN"
    BR END_IT
'
LBL CLOSE_S
  PRINT "0 HATCH=CLOSED"
BR END_IT
' 
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               END_IT(exit) PROCEDURE
' END of Main PLC Ladder Logic Code
'
LBL END_IT       'Exit
  SSTP 1
END              'end the procedures
PGM              'end of program in RAM
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''' ISL PGM STARTED '''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		ISL PLC Ladder Logic PROCEDURES
'
PGM 6000

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                WHO AM I PROCEDURE
'
LBL WHO
  PRINT "0 hatch"
BR END_PLC
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                CHKPOS PROCEDURE check position
'
LBL CHKPOS
  PRINT "0 ",POS
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                POLL THE CONTROLLER PROCEDURE
'
LBL POLL
  PRINT "0 POS=",POS," : b26-21=",IO 26,IO 25,IO 24,IO 23,IO 22,IO 21
BR END_PLC       'branch to exit

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                CODE VERSION PROCEDURE
'
LBL CODEV
  PRINT "0 code ver = 0.1(latest)"
BR END_PLC      'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                IO20 PROCEDURE for bits 26 - 21
' Check IO 20 bits
'
LBL IO20
  PRINT "0 ",IO 26,IO 25,IO 24,IO 23,IO 22,IO 21
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                IO20MASK PROCEDURE
' Check the Select, Insert bit mask 24-21
'
LBL IO20MASK
  VAR B21=IO 21*8 
  VAR B22=IO 22*4 
  VAR B23=IO 23*2 
  VAR B24=IO 24
  VAR BITMASK=B21+B22+B23+B24
  PRINT "0 ",BITMASK
BR END_PLC
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                IO2122 PROCEDURE for cw and ccw bits 21,22
' Check limit switches
'
LBL IO2122
  PRINT "0 ",IO 21," ",IO 22
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		END_PLC PROCEDURE
' END of ISL PLC code
'
LBL END_PLC		
END 
PGM
