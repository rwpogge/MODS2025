/*!
  \mainpage bshutter.plc - Blue Shutter PLC program

  \author Staff, OSU Dept. of Astronomy (rgonzale@astronomy.ohio-state.edu)
 
  \date 2007 Feb 02
  
  \section Usage
  
  Usage: Multi-level command set used with ISL system.
  
  Where: \c MODS instrument
  
  \section Introduction

 The following application program generates motion in the MicroLYNX 
 by following an external pulse source. The code checks the value of an 
 IO and updates whether they want the following to be fine or coarse. 
 The program also includes limit switches that only allow for motion in 
 one direction when the limit has been reached.

 Notes:

   1. Module in ML13,14,15, or 16
   2. Pulse Generator ( signal from HE ) into module
   3. Digital Inputs in IO Lines 21, 22, and 23

 All Motion Parameters are documented in the MicroLYNX Part III 
 Software Reference.

<pre>
2007 Feb 02 - new application [rdg]
</pre>

\todo

<ul>
</ul>
*/
/*!
  \file bshutter.plc
  \brief Listens to an external Pulse from the HE for the MODS Blue Shutter
*/
/** END HEADER **/
' Start here with ladder code
MSEL = 10    	'10usteps/fullstep = 2000 microsteps/rev
MUNIT = 2000 	'sets units to (2000 usteps/rev) 
		'gives velocity and accelerations in rev/sec
MAC = 65     	'Acceleration Current = 65% = 4.5 amps peak
MRC = 54     	'Run Current = 2.7 amps RMS *1.4 = 3.8 amps peak (3.8/7 = 54% )
MHC = 0      	'Motor Hold Current is zero
'
ACLT=1         	'linear acceleration (default)
ACCL=DECL = 20 	'acceleration rate (rev/sec^2)
LDECL = 500    	'limit deceleration rate (rev/sec^2)
'
VM= 5   	'max running speed (rev/sec)
VM= 0.5 	'Homing speed to assert limit (rev/sec)

VAR counts 	'User Variable
VAR count2 	'User Variable
'
Ios 15=5,0,0,0,1,1 	'Pulse Encoder input
Ios 16=6,0,0,0,1,1 	'Pulse Encoder input
'
Ios 21=0,0,0 	'NEGATIVE LIMIT (general purpose, input, active low)
Ios 22=0,0,0 	'POSITIVE LIMIT (general purpose, input, active low)
Ios 23=0,0,0 	'Fine resolution input(general purpose, input, active low)
'

Has=0.9999999 	'Half axis scaling 1:1
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               STARTUP MODE
' PLC starts at address #1
'
PGM 1			'Toggle into Programming Mode at address 1
LBL STARTUP 		'Pre-defined label to start on power-up
'
Hae=1 			'enable half axis mode (following)
'
LBL mainloop 		'User label called main
BR coarse, Io 23=1 	'Check state of coarse/fine select input
Has=.5 			'Set half axis scaling to 0.5:1
Msel=256 		'High resolution (fine, 51200 steps/rev)
BR cw 			'Branch to LBL cw
'
LBL coarse 		'User label called course
Has=.9999999 		'Reset half axis scaling to 1:1
Msel=16 		'Low resolution (coarse, 1000 steps/rev)
'
LBL cw 			'User label called cw
BR ccw, Io 21=0 	'Branch to ccw if IO 21 is inactive
Hae=0 			'Turn off half axis mode
'
LBL cw1 		'User label called cw1
counts=Ctr3 		'Set variable counts = Ctr3
DELAY 50 		'Wait 50 msec
count2=Ctr3 		'Set user variable count2=Ctr3
BR cw1, counts<=Ctr3 	'Loop while control encoder is going the wrong way
Hae=1 			'Enable half axis mode
'
LBL ccw 		'User label called ccw
BR main, Io 22=0 	'Branch to LBL main if IO 22 is inactive
Hae=0 			'Turn off half axis mode
LBL ccw1 		'User label called ccw1
counts=Ctr3 		'Set variable counts = Ctr3 
DELAY 50 		'Wait 50 msec 
count2=Ctr3 		'Set variable count2 = Ctr3
BR ccw1, counts>=Ctr3 	'Loop while control encoder is going the wrong way
Hae=1 			'Enable half axis mode
'
BR mainloop 		'Unconditional Branch back to LBL mainloop
END 			'End Program 
Pgm 			'Toggle out of Programming Mode 
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''' NEW PLC PGM STARTED '''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               ISL PLC General PROCEDURES
'
PGM 6000
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                WHO AM I PROCEDURE
'
LBL WHO
  PRINT "bshutter"
BR END_PLC
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                POLL THE CONTROLLER PROCEDURE
'
LBL POLL
  PRINT "0 POS=",POS," : BITS26-21=",IO 26,IO 25,IO 24,IO 23,IO 22,IO 21
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                CODE VERSION PROCEDURE
'
LBL CODEV
  PRINT "0 codeV=0.1(5/12/06)",":HW",VER
BR END_PLC      'branch to exit
'
'   END_PLC(exit) PROCEDURE
LBL END_PLC       'Exit
END              'end the procedures
PGM              'end of program in RAM 