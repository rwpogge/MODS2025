****************************************
**   Acquisition/Guiding/Wavefront    **
* *       low level software         * *
*  *                                *  *
*   *           TEST PLC           *   *
*  *       Date: 20 Mar 2006        *  *
* *  Author: OSU/ISL Astronomy Staff * *
**                                    **
****************************************
* asterisk '*' is a commented line and/or field.
* single quote ' is a PLC MicroLYNX code comment.
** Drive Motor:
* 
* Motor type = Size 17 step motor, 200 steps per revolution, double-ended shaft
* Part # = Applied Motion #HT17-075-D
* Rated Current = 1.7 amps/phase, parallel (RMS)
* Rated Holding Torque = 62 in*oz
* Rated Torque at Operating Speed = 35 in*oz @ 70 volts
*
** Motor Connections:
*
* A+	Orange 	& Black/White
* A-	Black 	& Orange/White
* B+	Red	& Yellow/White
* B-	Yellow	& Red/White
*
** Motor Controller Specifications:
*
* Manufacturer & Model = IMS MicroLYNX 7 (#MX-CS100-701)
* Rated Current = 5 amps RMS/phase, 7 amps peak/phase
*****************************************
**   Acquisition/Guiding/Wavefront    **
* *       low level software         * *
*  *                                *  *
*   *           TEST PLC           *   *
*  *       Date: 20 Mar 2006        *  *
* *  Author: OSU/ISL Astronomy Staff * *
**                                    **
****************************************
* asterisk '*' is a commented line and/or field.
* single quote ' is a PLC MicroLYNX code comment.
** Drive Motor:
* 
* Motor type = Size 17 step motor, 200 steps per revolution, double-ended shaft
* Part # = Applied Motion #HT17-075-D
* Rated Current = 1.7 amps/phase, parallel (RMS)
* Rated Holding Torque = 62 in*oz
* Rated Torque at Operating Speed = 35 in*oz @ 70 volts
*
** Motor Connections:
*
* A+	Orange 	& Black/White
* A-	Black 	& Orange/White
* B+	Red	& Yellow/White
* B-	Yellow	& Red/White
*
** Motor Controller Specifications:
*
* Manufacturer & Model = IMS MicroLYNX 7 (#MX-CS100-701)
* Rated Current = 5 amps RMS/phase, 7 amps peak/phase
* Rated Voltage = 24 to 75 VDC
* Daughterboards = None
*
** Motor Controller Settings:
*
MSEL= 10      '10 usteps/fullstep = 2000 microsteps/rev
MUNIT=2000    '(2000 usteps/rev) gives velocity and acceleration in rev/sec
MAC=54        'Acceleration Current
MRC=50        'Run Current
MHC=0         'hold current is zero
HCDT=500      'hold current delay msec (for overlap with brake engagement)
*
** Motion Configuration:
*
ACLT=1           'linear acceleration (default)
ACCL=5          'acceleration rate in rev/sec^2
DECL=ACCL        'deceleration rate in rev/sec^2
LDECL=5        'set decel after a limit is asserted
* Overtravel at limit = ScrewPitch * VM^2/(2*LDECL) = * 0.10mm (pitch=1mm and 
* VM=1 rev/sec, LDECL=500 rev/sec^2)
* Be aware of overtravel when seeking limits, must not decelerate hard into 
* limits.
* Maximum Permitted Overtravel  ~0.5mm , ~0.020"
VM=1.0		'travel speed
* VM=0.5 is the travel speed for asserting limits on AGW Focus
*
** Motion Controller I/O Connections
* Vpull = not used
* GND = 24 volts
*
IOS 21 = 13,0,0    'POSITIVE (CW) limit,active low (viewed from front of motor)
IOS 22 = 14,0,0    'NEGATIVE (CCW)limit, active low
*IOS 23 = 'not used
*IOS 24 = 'not used
*IOS 25 = 'not used
IOS 26 = 0,1,0	   'line 26 is general output for brake control
IOS 30 = 0,0,0	   'position code bits in group 30, active low
*
*
*      Variable Declarations
VAR ABSPOS        'Absolute position for mask magazine
VAR CODEV         'PLC code version. 0.0.0
VAR SCENTR        'Science Center for Focus
*
SCENTR = 25.0    'Focus Science Center Position (adjusted according to XY)
*
* Initialize at address 100
PGM 100
LBL INITIAL	'Initialize procedure for the AGW stage Focus
VM=1.0		'change the velocity to 5.0 rev/sec running speed
* releases brake
IO 26=1
SLEW 1.0	'slew at 5 rev/sec with acceleration ON. CCW away from motor
HOLD 2          'suspend program execution until position completion
MOVR 1.0
HOLD 2          'suspend program execution until position completion
SLEW 0.5	'slew to CCW limit very slowly
HOLD 2		'suspend program execution until position completion
DELAY 100	'wait for 100 millisec's before applying brake
POS=0.0		'call it anything you like I call it initialize.
* applies brake
IO 26=0
VM=1.0          'keep the velocity to 5.0 rev/sec running speed
BR END_IT       'branch to exit
*
LBL HOME	'HOME procedure for X,Y, axis and Focus
VM=1.0		'change the velocity to 10.0 rev/sec running speed
* releases brake
IO 26=1
MOVA 0.0        'move to an absolute index of 0.0
HOLD 2          'suspend program execution until position completion
DELAY 100       'wait for 100 millisec's before applying brake
* applies brake
IO 26=0
BR END_IT       'branch to exit
*
LBL CENTER      'Science Center position 
* releases brake
IO 26=1
* Science Center position is defined by SCENTR
MOVA SCENTR     'absolute move to SCENTR 
HOLD 2          'suspend program execution until position completion
*
DELAY 100       'wait for 100 millisec's before applying brake
* applies brake
IO 26=0
*
BR END_IT         'branch to exit
LBL END_IT       'Exit
*
* More code will be developed here.
*         Maybe?
*               
************************************
END              'end the procedures
PGM              'end of program in RAM 
d Voltage = 24 to 75 VDC
* Daughterboards = None
*
** Motor Controller Settings:
*
MSEL= 10      '10 usteps/fullstep = 2000 microsteps/rev
MUNIT=2000    '(2000 usteps/rev) gives velocity and acceleration in rev/sec
MAC=54        'Acceleration Current
MRC=50        'Run Current
MHC=0         'hold current is zero
HCDT=500      'hold current delay msec (for overlap with brake engagement)
*
** Motion Configuration:
*
ACLT=1           'linear acceleration (default)
ACCL=5          'acceleration rate in rev/sec^2
DECL=ACCL        'deceleration rate in rev/sec^2
LDECL=5        'set decel after a limit is asserted
* Overtravel at limit = ScrewPitch * VM^2/(2*LDECL) = * 0.10mm (pitch=1mm and 
* VM=1 rev/sec, LDECL=500 rev/sec^2)
* Be aware of overtravel when seeking limits, must not decelerate hard into 
* limits.
* Maximum Permitted Overtravel  ~0.5mm , ~0.020"
VM=1.0		'travel speed
* VM=0.5 is the travel speed for asserting limits on AGW Focus
*
** Motion Controller I/O Connections
* Vpull = not used
* GND = 24 volts
*
IOS 21 = 13,0,0    'POSITIVE (CW) limit,active low (viewed from front of motor)
IOS 22 = 14,0,0    'NEGATIVE (CCW)limit, active low
*IOS 23 = 'not used
*IOS 24 = 'not used
*IOS 25 = 'not used
IOS 26 = 0,1,0	   'line 26 is general output for brake control
IOS 30 = 0,0,0	   'position code bits in group 30, active low
*
*
*      Variable Declarations
VAR ABSPOS        'Absolute position for mask magazine
VAR CODEV         'PLC code version. 0.0.0
VAR SCENTR        'Science Center for Focus
*
SCENTR = 25.0    'Focus Science Center Position (adjusted according to XY)
*
* Initialize at address 100
PGM 100
LBL INITIAL	'Initialize procedure for the AGW stage Focus
VM=1.0		'change the velocity to 5.0 rev/sec running speed
* releases brake
IO 26=1
SLEW 1.0	'slew at 5 rev/sec with acceleration ON. CCW away from motor
HOLD 2          'suspend program execution until position completion
MOVR 1.0
HOLD 2          'suspend program execution until position completion
SLEW 0.5	'slew to CCW limit very slowly
HOLD 2		'suspend program execution until position completion
DELAY 100	'wait for 100 millisec's before applying brake
POS=0.0		'call it anything you like I call it initialize.
* applies brake
IO 26=0
VM=1.0          'keep the velocity to 5.0 rev/sec running speed
BR END_IT       'branch to exit
*
LBL HOME	'HOME procedure for X,Y, axis and Focus
VM=1.0		'change the velocity to 10.0 rev/sec running speed
* releases brake
IO 26=1
MOVA 0.0        'move to an absolute index of 0.0
HOLD 2          'suspend program execution until position completion
DELAY 100       'wait for 100 millisec's before applying brake
* applies brake
IO 26=0
BR END_IT       'branch to exit
*
LBL CENTER      'Science Center position 
* releases brake
IO 26=1
* Science Center position is defined by SCENTR
MOVA SCENTR     'absolute move to SCENTR 
HOLD 2          'suspend program execution until position completion
*
DELAY 100       'wait for 100 millisec's before applying brake
* applies brake
IO 26=0
*
BR END_IT         'branch to exit
LBL END_IT       'Exit
*
* More code will be developed here.
*         Maybe?
*               
************************************
END              'end the procedures
PGM              'end of program in RAM 
