/*!
  \mainpage agwFocus.plc - AGW Prime Focus PLC program

  \author Staff, OSU Dept. of Astronomy (rgonzale@astronomy.ohio-state.edu)
 
  \date 2006 Jul 20
  
  \section Usage
  
  Usage: Multi-level command set used with ISL system
	 or Window IMS system
  
  Where: \c MODS instrument
  
  \section Introduction
	Small command set the key words are -
	initial: Initialize AGW Prime Focus 
	         (move to CW or CCW and set pos=0.000)
	home: Send to position 0.000
	stow: Send to oposite of home
	stop: Stop all mechanism movement
	subroutines:
		relbrk: Release break
		setbrk: Set break

	All Motion Parameters are documented in the MicroLYNX Part III 
	Software Reference.

<pre>
2006 Jul 20 - new application [rdg]
2006 Nov 01 - added home,initial,stow,stop,relbrk,setbrk [rdg]
</pre>

\todo

<ul>
</ul>
*/
/*!
  \file agwXY.plc
  \brief Small command set for AGW XY mechanisms
*/
/** END HEADER **/
* START loading PLC
' Motion Configuration
MSEL= 10
MUNIT=2000
MAC = 50
MRC=34
MHC = 0
HCDT = 500
ACLT = 1
ACCL=50		'acceleration rate in rev/sec^2
DECL=ACCL	'acceleration rate = deceleration rate
LDECL=500	'set decel after a limit is asserted
' Input & Output Configuration
IOS 21 = 13,0,0	'POSITIVE (CW) limit,active low,
IOS 22 = 14,0,0	'NEGATIVE (CCW)limit, active low
' Variable Declarations
VAR VNORM=10.0   
VM=VNORM	'5 rev/sec running speed
VAR IOBITS	'IO bits 21 and 22 variable
VAR VSEEK=0.5
VAR IOBITS	'IO bits 21 and 22.
*VAR BACKLASH = -->> 0.2? <<--
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
	        'STARTUP MODE
		'PLC starts at address #100
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
PGM 100          'Starts at address 100
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		'INITIAL(initializing) and HOME PROCEDURES
' INITIALize mechanism
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
			'Initialization
LBL INITIAL
IOBITS=IO 21+IO 22  'Get io bits 21 and 22 information
BR BITERR, IOBITS=2 'Check io bits 21 and 22 (both ON not allowed)
SLEW VNORM,0	'slew to to set position 0.000
HOLD 2		'suspend procedure until move is complete
POS=0.000	'set position to Zero (0.000) again with enough resolution
VM=VSEEK	'set the speed for sneeking up.
MOVA -0.5	'move to an absolute index of -0.500
HOLD 2		'suspend procedure until move is complete
SLEW VSEEK,0	'finetune the home position (position 0.000)
HOLD 2		'suspend procedure until move is complete
VM=VNORM	'reset the speed to normal speed.
POS=0.000	'set position to Zero (0.000) again with enough resolution
'CALL SETBRK
BR END_IT         'branch to exit
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		'HOME(0.0 position) PROCEDURE
' HOME position is at the opposite end of HOME.  
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL HOME
IOBITS=IO 21+IO 22  'Get io bits 21 and 22 information
BR BITERR, IOBITS=2 'Check io bits 21 and 22 (both ON not allowed)
BR SETPOS,IO 21=1
MOVA 0.0	'slew to to set position 0.000
BR END_IT
' Already in position
LBL SETPOS
POS=0.0
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		'STOW(park) PROCEDURE
' STOW position is at the opposite end of HOME.  
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL STOW
IOBITS=IO 21+IO 22  'Get io bits 21 and 22 information
BR BITERR, IOBITS=2 'Check io bits 21 and 22 (both ON not allowed)
SLEW -VNORM,0	'slew to STOW position (opposite of HOME). 
HOLD 2		'suspend procedure until move is complete
VM=VSEEK	'set the speed for sneeking up.
MOVA POS+0.500	'move to a relative index of 0.500
HOLD 2		'suspend procedure until move is complete
SLEW -VSEEK,0   'finetune the stow position
HOLD 2		'suspend procedure until move is complete
VM=VNORM	'reset the speed to normal speed.
BR END_IT	'branch to exit
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		'STOP(halt) PROCEDURE
' STOP all motion and end this function
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL STOP
SSTP 1 		'stop procedure
DELAY 500
BR END_IT	'branch to exit
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		'RELeaseBReaK PROCEDURE
' Subroutine to release the brake.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL RELBRK
IO 26=1
RET
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		'SETBReaK PROCEDURE
' Subroutine to set the brake.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL SETBRK
IO 26=0
RET
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		'BITERR(io error) PROCEDURE
' BITERR Both bits 21 and 22 "ON" not allowed.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL BITERR
PRINT "Bits 21(ON)=",IO 21," and 22(ON)=",IO 22," not allowed"
'reset iobits
IOBITS=0
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		'END_IT(exit) PROCEDURE
' EXIT the PLC routine
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL END_IT       'Exit
END              'end the procedures
PGM              'end of program in RAM 
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
			'ISL PLC
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
PGM 6000
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                'WHO AM I PROCEDURE
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL WHO
PRINT "agwFocus"
BR END_PLC
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                'POLL THE CONTROLLER PROCEDURE
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL POLL
PRINT "POS=",POS," : BITS26-21=",IO 26,IO 25,IO 24,IO 23,IO 22,IO 21
BR END_PLC       'branch to exit
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                'CODE VERSION PROCEDURE
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL CODEV
PRINT "codeV=0.1(5/12/06)",":HW",VER
BR END_PLC      'branch to exit
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
		'ENDIT PROCEDURE
'End of the line
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
LBL END_PLC		
END 'END of ISL PLC code
PGM
