/*!
  \mainpage focalPlane.plc - focalPlane PLC program

  \author Staff, OSU Dept. of Astronomy (rgonzale@astronomy.ohio-state.edu)
 
  \date 2007 Feb 26
  
  \section Usage
  
  Usage: Multi-level command set used with MODS and ISL systems
	 or Window IMS system
  
  Where: \c MODS instrument
  
  \section Introduction
	Small command set the key words are -
		initial: Initialize Hatch
		   open: Send open to position 0.000
		  close: Send close position oposite of home.
		   stop: Stop all mechanism movement
		 relbrk: Release break
		 setbrk: Set break
	
	Mechanisms start at Base Address 0x100:
	hatch			LBL HATCH
	calibration Tower	LBL CALIB
	Mask Insert		M_INSERT
	Mask Select		M_SELECT
	Dichroic		DICHRIC
	AGW Y			AGW_Y
	AGW X			AGW_X
	AGW Focus		AGWFOCUS
	AGW Filter Wheel	AGW_FW
			
	NOTE: One(1) user unit = 200 steps
	NOTE2: To run a test set COUNT=n then EXEC LOOPIT
	NOTE3: PRINT statment has a number with a space example:
		PRINT "0 ",Value or PRINT "0 string"
		0=OK, 1=ERROR, 2=FATAL 3=WARNING

	All other motion parameters are documented:
	(MicroLYNX Part III Software Reference)

<pre>
2009 Feb 26 - new application [rdg]
</pre>

\todo

<ul>
</ul>
*/
/*!
  \file focalPlane.plc
  \brief Small command set for hatch mechanism
*/
/** END HEADER **/
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Pgm 100		'program starts at address 100
LBL HATCH
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Msel= 10      '10 microsteps per step
Munit=2000
Mac=60        'accel current is 0.60 * 7
Mrc=35
Mhc=0
'Motion Parameters
MSEL=10		'10 microsteps per step
MUNIT=2000	'units to revs
MAC=50		'accel current is 0.50 * 7
MRC=40		'run current is 0.40 * 7
MHC=0		'hold current is zero
HCDT=500	'hold current delay msec	
ACLT=1		'linear acceleration
ACCL=50		'acceleration rate in rev/sec^2
DECL=ACCL	'deceleration rate in rev/sec^2
LDECL=500	'max deceleration
'Input & Output Configuration
IOS 21=13,0,0	'CW limit
IOS 22=14,0,0	'CCW limit
IOS 26=0	'Brake
'Variable Declarations
VAR VNORM=2.0		'Normal Speed
VAR VSLOW=0.50		'Slewing Speed
VAR VSEEK=0.25		'Seeking Speed
VM=VNORM		'Move Velocity in rev/sec
VAR STEPOPEN=-.50	'CW Trip position
VAR STEPCLOS=-2.75	'CCW Trip position
VAR TTIME=4000		'Timer 4secs
VAR COUNT=0		'Used for cycle counts for test
VAR T_DELAY=500		'Default delay for cycle test
VAR PWRFAIL=1		'IEB Power check(Power Failures of any kind)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' LOOPIT PROCEDURE Cycle Tester
LBL LOOPIT
  BR END_IT, COUNT=0
  CALL OPEN
  DELAY T_DELAY
  CALL CLOSE
  DELAY T_DELAY
  DEC COUNT	'Decrement the counter in cycle test
BR LOOPIT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' INITIAL PROCEDURE INITIALize the controller to it's defaults
LBL INITIAL
  PWRFAIL=0			'Reset Power Failure variable
  BR BITERR, IO 21+IO 22=2	'Check io b21 and b22 both high:on:1 not allow
  BR CLINIT, IO 22=1		'Check io b22 if already closed
  SLEW -VSLOW,0
  HOLD 2
  PRINT "0 CLOSED"
  POS=-3.157
BR END_IT		'branch to exit
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' OPEN(or home) PROCEDURE
LBL OPEN
  VM=VNORM
  BR PWRERR, PWRFAIL=1		'Check for Power Failure or was turned off/on
' Interigate IO 21 and IO 22, these are the CW(OPEN) and CCW(CLOSE) limits
  BR AJARERR, IO 21+IO 22=0	'Hatch is Ajar
  BR BITERR, IO 21+IO 22=2	'Check io b21 and b22 both high:on:1 not allow
  BR IOFAIL, IO 21=1		'Check CW(OPEN) on starting position
  TP1=STEPOPEN,SCNT1	'Configure with user units
  TPE1=1		'Enable user units
  TT1=TTIME,TIMER1	'Configure to trip in TTIME milliseconds
  TTE1=1		'Enable timeout
  SLEW VNORM,0		'slew to to set position 0.000
  HOLD 2		'suspend procedure until move is complete
  SLEW VSEEK,0		'sneak-up on the limit
  HOLD 2		'suspend procedure until move is complete
  POS=0.0
  PRINT "0 OPEN"
BR END_IT, COUNT=0    	'branch to exit
RET
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' CLOSE(close) PROCEDURE
LBL CLOSE
  VM=VNORM
  BR PWRERR, PWRFAIL=1  	'Check for Power Failure or was turned off/on
' Interigate IO 21 and IO 22, these are the CW(OPEN) and CCW(CLOSE) limits
  BR AJARERR, IO 21+IO 22=0	'Hatch is Ajar
  BR BITERR, IO 21+IO 22=2	'Check io b21 and b22 both high:on:1 not allow
  BR IOFAIL, IO 22=1		'Check CCW(CLOSE) on starting position
  TP2=STEPCLOS,SCNT1	'Configure with user units
  TPE2=1		'Enable user units
  TT1=TTIME,TIMER1	'Configure to trip in TTIME milliseconds
  TTE1=1		'Enable timeout
  SLEW -VNORM,0		'slew to CLOSE position
  HOLD 2		'suspend procedure until move is complete
  SLEW -VSEEK,0		'sneak-up on limit
  HOLD 2		'suspend procedure until move is complete
  PRINT "0 CLOSED"
BR END_IT, COUNT=0	'branch to exit
RET
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		STOP(halt) PROCEDURE
LBL STOP
BR END_IT	'branch to exit
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               BITERRor(io error) PROCEDURE
LBL BITERR
  PRINT "2 FAULT Sensor Fault, both limits asserted"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               CLINIT PROCEDURE
LBL CLINIT
 PRINT "0 CLOSED"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		PWRERR(power failure error) PROCEDURE
LBL PWRERR
  PRINT "1 PWRFLR power failure or turned off (reset)"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               AJARERRor(io error) PROCEDURE
LBL AJARERR
  PRINT "1 AJAR The hatch is partially open, please reset"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               TIMER1 PROCEDURE
LBL TIMER1
  PRINT "1 UNKNOWN request timed out"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		SETBRaKe PROCEDURE
LBL SETBRK
  IO 26=0
RET 
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               RELeaseBRaKe PROCEDURE
LBL RELBRK
  IO 26=1
RET
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               IOFAIL PROCEDURE
LBL IOFAIL
  BR OCREADY, IO 21=1
   BR PWRERR, PWRFAIL=1  'Check for Power
    PRINT "0 CLOSED"
BR END_IT
LBL OCREADY
  PRINT "0 OPEN"
BR END_IT
LBL RESETERR
  PRINT "0 CLOSE Already in reset state"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               StepCouNT1 PROCEDURE
LBL SCNT1		'user units
  SSTP 0
RET
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               HatchSTATUS PROCEDURE
LBL HSTATUS
  BR BITERR, IO 21+IO 22=2	'Check io b21 and b22 both high:on:1 not allow
  BR AJARERR, IO 21+IO 22=0	'Hatch is ajar
  BR CLOSE_S, IO 22=1
    PRINT "0 OPEN"
    BR END_IT
LBL CLOSE_S
  PRINT "0 CLOSED"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                WHO AM I PROCEDURE
LBL WHO
  PRINT "0 hatch"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               END_IT(exit) PROCEDURE
LBL END_IT       'Exit
  SSTP 1
END              'end the procedures
PGM              'end of program in RAM
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'
LBL CALIB
Drven=0		'Disables Motor
Msel= 10	'10 microsteps per step
Munit=2000	'units to revs
Mac=70		'accl current is 0.70 x 7amps
Mrc=70		'run current is 0.70 x 7amps
Mhc=0		'Hold current is Zero
Hcdt=2000	'Hold Current Delay msec
'Input & Output Configuration
Ios 21 = 13,0,0	'CW Limit sensor (active low)
Ios 22 = 14,0,0	'CCW Limit sensor (active low)
Ios 26 = 18,1,0	'User Output for Brake Control
'Motion Configuration
Aclt=1		'Linear Acceleration
Accl=50		'Acceleration (Rev/sec^2)
Decl=Accl	'Deceleration (Rev/sec^2)
Ldecl=500	'Limit Deceleration (Rev/sec^2)
'Variable Declarations
VAR VNORM=8.0	'Nominal operating velocity (8 revs/sec)
VAR VSLOW=3.0	'HOME Seeking reset velocity (3 revs/sec)
VAR VSEEK=2.0	'Seeking velocity (2 revs/sec)
VAR TTIME=12000	'Timeout at 12 seconds from limit to limit at
VAR T_RESET=30000 	'Timeout at 22 seconds for power resets at
VAR STEPCAL=-55.00	'User unit count for Calibration mode
VAR STEPSCI=-2.0	'User unit count for Science mode
VAR SAVE_POS		'Save position
VAR STEPPOS=0		'Number of steps to move
VAR PWRFAIL=1		'Power Failure variable
'VM=VNORM		'Set the speed
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                INITIALize STORAGE PROCEDURE
LBL INITIAL			'Intialize Calibration Tower
LBL STORAGE
  PWRFAIL=0
  BR BITERR, IO 21+IO 22=2	'CW and CCW high:on:1 not allowed
  BR GOODTOGO, Io 21=1		'If Already at the reset position
  VM=VNORM		'Set the speed
  TT1=T_RESET,TIME_ERR	'Configure to trip in T_RESET milliseconds
  TTE1=1                'Enable timeout
  Drven=1		'Enables Drive
  SLEW VSLOW,0		'Slew very slowly to the home limit
  HOLD 2
  SAVE_POS=POS
  LBL GOODTOGO		'Already at the reset position
   POS=0.0       	'Sets Position to Zero
    PWRFAIL=0
  PRINT "0 OUT"         'RESET Successful, CALIB=OUT"
BR END_IT 
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                CALMODE PROCEDURE
LBL CALMODE		'Starts Calibration Mode
  BR BITERR, IO 21+IO 22=2	'CW and CCW high:on:1 not allowed
  BR UNKERR, IO 21+IO 22=0	'CW and CCW low:off:0 Unknown position
  BR SWERR, Io 22=1		'If already in CALMODE do nothing
  BR PWRERR, PWRFAIL=1  'Check for Power Failure or was turned off
  TT1=TTIME,TIME_ERR    'Configure to trip in TTIME milliseconds
  TTE1=1                'Enable timeout
  TP1=STEPCAL,SCNT1     'Configure with user units
  TPE1=1                'Enable user units
  Drven=1		'Enable the motor
  SLEW -VNORM,0		'Slew to the first part of the trip
  HOLD 2		'Waits for motion to stop before proceeding
  SLEW -VSEEK,0		'Sneak up on the CW limit
  HOLD 2		'Waits for motion to stop before proceeding
  SAVE_POS=POS
  PRINT "0 IN"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                SCIMODE PROCEDURE
LBL SCIMODE
  BR BITERR, IO 21+IO 22=2	'CW and CCW high:on:1 not allowed
  BR UNKERR, IO 21+IO 22=0	'CW and CCW low:off:0 Unknown position
  BR SWERR, Io 21=1		'If already in SCIMODE do nothing
  TT1=TTIME,TIME_ERR	'Configure to trip in TTIME milliseconds
  TTE1=1                'Enable timeout
  BR PWRERR, PWRFAIL=1  'Check for Power Failure or was turned off
  TP2=STEPSCI,SCNT1	'Configure with user units
  TPE2=1                'Enable user units
  Drven=1
  SLEW VNORM,0		'Slew to the first part of the trip
  HOLD 2		'Waits for motion to stop before proceeding
  SLEW VSEEK,0		'Sneak up on the CW limit
  HOLD 2		'Waits for motion to stop before proceeding
  SAVE_POS=POS
  POS=0.0       	'Sets Position to Zero
  PRINT "0 OUT"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                SWERR and SW21 PROCEDURES
LBL SWERR
  BR SW21, IO 21=1
   BR PWRERR, PWRFAIL=1  'Check for Power Failure or was turned off
    PRINT "0 IN"
BR END_IT
LBL SW21
   BR PWRERR, PWRFAIL=1  'Check for Power Failure or was turned off
    PRINT "0 OUT"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		STEP(step +/-revs) PROCEDURE
LBL STEP
  Drven=1
  MOVR STEPPOS
  PRINT "0 ",POS
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		BITERR(io error) PROCEDURE
LBL BITERR
  PRINT "2 FAULT Sensor Fault, both limits asserted"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		PWRERR(power failure error) PROCEDURE
LBL PWRERR
  PRINT "2 PWRFLR Power failure or turned off (reset)"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               TRIPCW(io error) PROCEDURE
LBL TRIPCW
  PRINT "1 CW limit tripped[",ERROR,"]"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               TRIPCCW(io error) PROCEDURE
LBL TRIPCCW
  PRINT "1 CCW limit tripped[",ERROR,"]"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               TIME_ERR PROCEDURE
LBL TIME_ERR
  PRINT "1 UNKNOWN request timed out"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               UNKERR PROCEDURE
LBL UNKERR
  BR PWRERR, PWRFAIL=1  'Check for Power Failure or turned off
  PRINT "1 UNKNOWN position, please reset"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'               StepCouNT1 PROCEDURE
LBL SCNT1               'user units
  SSTP 0
RET
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                WHO AM I PROCEDURE
LBL WHO
  PRINT "calib"
BR END_IT
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		ENDIT(exit) PROCEDURE
LBL END_IT		'End Program Execution
  Drven=0
  SSTP 1
end
Pgm
'''''''''''''''''''' Mask Insert '''''''''''''''''''''
LBL MINSERT





''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''' ISL PGM STARTED '''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		ISL PLC Ladder Logic PROCEDURES
PGM 6000

''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                WHO AM I PROCEDURE
LBL WHO
  PRINT "0 hatch"
BR END_PLC
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                CHKPOS PROCEDURE check position
LBL CHKPOS
  PRINT "0 ",POS
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                POLL THE CONTROLLER PROCEDURE
LBL POLL
  PRINT "0 POS=",POS," : b26-21=",IO 26,IO 25,IO 24,IO 23,IO 22,IO 21
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                CODE VERSION PROCEDURE
LBL CODEV
  PRINT "0 code ver = 0.1(latest)"
BR END_PLC      'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                IO20 PROCEDURE for bits 26 - 21
' Check IO 20 bits
LBL IO20
  PRINT "0 ",IO 26,IO 25,IO 24,IO 23,IO 22,IO 21
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                IO20MASK PROCEDURE
' Check the Select, Insert bit mask 24-21
LBL IO20MASK
  VAR B21=IO 21*8 
  VAR B22=IO 22*4 
  VAR B23=IO 23*2 
  VAR B24=IO 24
  VAR BITMASK=B21+B22+B23+B24
  PRINT "0 ",BITMASK
BR END_PLC
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'                IO2122 PROCEDURE for cw and ccw bits 21,22
' Check limit switches
LBL IO2122
  PRINT "0 ",IO 21," ",IO 22
BR END_PLC       'branch to exit
'
''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'		END_PLC PROCEDURE
' END of ISL PLC code
LBL END_PLC		
END 
PGM
