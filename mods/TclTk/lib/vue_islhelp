#!/usr/bin/wish -f
# vue_fshelp source
# Basic font for button, menus and labels for MODS Help
# Product of OSU/ISL Astronomy Dept.
# to be incorporated into MODS

# Window manager configurations for directories
  set ICONDIR /home/dts/mods/TclTK/images
  set BINDIR /home/dts/mods/TclTK/bin
  set LIBDIR /home/dts/mods/TclTK/lib

  global tkVersion
  wm positionfrom . user
  wm sizefrom . ""
  wm maxsize . 1152 900
  wm iconposition . 1200 0
#  wm iconbitmap . @$ICONDIR/vlb.icon
  wm iconname . {mods}
  wm geometry . +5+25
  wm title . {Help Files}
  set w .
  $w config -cursor {top_left_arrow black white}


# Decide on font size.
  if {$argc<=0} {
      set ibfont [open "|/bin/sh -c \"cat $LIBDIR/my_font; :\""]
      set bfont [gets $ibfont]
      catch {close $ibfont}
  } else {
      set bfont [lindex $argv 0]
  }  

# Top frame is a menubar
# there is more magic that you can do with this
# build widget .m
frame .m \
	-bg {linen} \
	-borderwidth {4} \
	-relief {groove} 

menubutton .m.a -text "A" -relief {raise} -font $bfont -menu .m.a.menu -background navy -fg white

menubutton .m.b -text "B" -relief {raise} -font $bfont -menu .m.b.menu -background navy -fg white

menubutton .m.c -text "C" -relief {raise} -font $bfont -menu .m.c.menu -background navy -fg white

menubutton .m.d -text "D" -relief {raise} -font $bfont -menu .m.d.menu -background navy -fg white

menubutton .m.e -text "E" -relief {raise} -font $bfont -menu .m.e.menu -background navy -fg white

menubutton .m.f -text "F" -relief {raise} -font $bfont -menu .m.f.menu -background navy -fg white

menubutton .m.g -text "G" -relief {raise} -font $bfont -menu .m.g.menu -background navy -fg white

menubutton .m.h -text "H" -relief {raise} -font $bfont -menu .m.h.menu -background navy -fg white

menubutton .m.i -text "I" -relief {raise} -font $bfont -menu .m.i.menu -background navy -fg white

menubutton .m.j -text "J" -relief {raise} -font $bfont -menu .m.j.menu -background navy -fg white

menubutton .m.k -text "K" -relief {raise} -font $bfont -menu .m.k.menu -background navy -fg white

menubutton .m.l -text "L" -relief {raise} -font $bfont -menu .m.l.menu -background navy -fg white

menubutton .m.lm -text "M" -relief {raise} -font $bfont -menu .m.lm.menu -background navy -fg white

menubutton .m.n -text "N" -relief {raise} -font $bfont -menu .m.n.menu -background navy -fg white

menubutton .m.o -text "O" -relief {raise} -font $bfont -menu .m.o.menu -background navy -fg white

menubutton .m.p -text "P" -relief {raise} -font $bfont -menu .m.p.menu -background navy -fg white

menubutton .m.lq -text "Q" -relief {raise} -font $bfont -menu .m.lq.menu -background navy -fg white

menubutton .m.r -text "R" -relief {raise} -font $bfont -menu .m.r.menu -background navy -fg white

menubutton .m.s -text "S" -relief {raise} -font $bfont -menu .m.s.menu -background navy -fg white

menubutton .m.t -text "T" -relief {raise} -font $bfont -menu .m.t.menu -background navy -fg white

menubutton .m.u -text "U" -relief {raise} -font $bfont -menu .m.u.menu -background navy -fg white

menubutton .m.v -text "V" -relief {raise} -font $bfont -menu .m.v.menu -background navy -fg white

menubutton .m.w -text "W" -relief {raise} -font $bfont -menu .m.w.menu -background navy -fg white

menubutton .m.x -text "X" -relief {raise} -font $bfont -menu .m.x.menu -background navy -fg white

menubutton .m.y -text "Y" -relief {raise} -font $bfont -menu .m.y.menu -background navy -fg white

menubutton .m.z -text "Z" -relief {raise} -font $bfont -menu .m.z.menu -background navy -fg white


button .m.q -text Exit -relief {raise} -font $bfont -background red -fg black -command exit 

# Main command entry area is under that
entry .m.ent -relief {sunken} -bg linen -fg black
pack .m.a .m.b .m.c .m.d .m.e .m.f .m.g .m.h .m.i \
.m.j .m.k .m.l .m.lm .m.n .m.o .m.p .m.lq .m.r \
.m.s .m.t .m.u .m.v .m.w .m.x .m.y .m.z .m.q \
 -side left -fill both -expand 1

pack .m -side top -fill x -expand 1

# Build a text frame to display the log file.

#bind .m.ent <Return> {Tools}
# Put the focus into the box

#focus .m.ent

menu .m.a.menu  -background blue -fg white
.m.a.menu add command -label AGW \
-font $bfont -command {exec vueinfo help agw.___ &}

menu .m.b.menu  -background blue -fg white
.m.b.menu add command -label B  \
-font $bfont -command {exec vueinfo help B &}

menu .m.c.menu  -background blue -fg white
.m.c.menu add command -label C \
-font $bfont -command {exec vueinfo help C &}

menu .m.d.menu  -background blue -fg white
.m.d.menu add command -label D  \
-font $bfont -command {exec vueinfo help D &}

menu .m.e.menu  -background blue -fg white
.m.e.menu add command -label e \
-font $bfont -command {exec vueinfo help e &}

menu .m.f.menu  -background blue -fg white
.m.f.menu add command -label f \
-font $bfont -command {exec vueinfo help f &}

menu .m.g.menu  -background blue -fg white
.m.g.menu add command -label "No G's" \
-font $bfont -command {}

menu .m.h.menu  -background blue -fg white
.m.h.menu add command -label h \
-font $bfont -command {exec vueinfo help h &}

menu .m.i.menu  -background blue -fg white
.m.i.menu add command -label IMCS_Logging \
-font $bfont -command { Help IMCS }
.m.i.menu add command -label i \
-font $bfont -command {exec vueinfo help i &}

menu .m.j.menu  -background blue -fg white
.m.j.menu add command -label "No J's" \
-font $bfont -command {}

menu .m.k.menu  -background blue -fg white
.m.k.menu add command -label k \
-font $bfont -command {exec vueinfo help k &}

menu .m.l.menu  -background blue -fg white
.m.l.menu add command -label l \
-font $bfont -command {exec vueinfo help l &}

menu .m.lm.menu  -background blue -fg white
.m.lm.menu add command -label m \
-font $bfont -command {exec vueinfo help m &}

menu .m.n.menu  -background blue -fg white
.m.n.menu add command -label n \
-font $bfont -command {exec vueinfo help n &}

menu .m.o.menu  -background blue -fg white
.m.o.menu add command -label o \
-font $bfont -command {exec vueinfo help o &}

menu .m.p.menu  -background blue -fg white
.m.p.menu add command -label p \
-font $bfont -command {exec vueinfo help p &}

menu .m.lq.menu  -background blue -fg white
.m.lq.menu add command -label "No Q's" \
-font $bfont -command {}

menu .m.r.menu  -background blue -fg white
.m.r.menu add command -label r \
-font $bfont -command {exec vueinfo help r &}

menu .m.s.menu  -background blue -fg white
.m.s.menu add command -label s \
-font $bfont -command {exec vueinfo help s &}

menu .m.t.menu  -background blue -fg white
.m.t.menu add command -label t \
-font $bfont -command {exec vueinfo help t &}

menu .m.u.menu  -background blue -fg white
.m.u.menu add command -label u \
-font $bfont -command {exec vueinfo help u &}

menu .m.v.menu  -background blue -fg white
.m.v.menu add command -label v \
-font $bfont -command {exec vueinfo help v &}

menu .m.w.menu  -background blue -fg white
.m.w.menu add command -label w \
-font $bfont -command {exec vueinfo help w &}

menu .m.x.menu  -background blue -fg white
.m.x.menu add command -label x \
-font $bfont -command {exec vueinfo help x &}

menu .m.y.menu  -background blue -fg white
.m.y.menu add command -label "No Y's" \
-font $bfont -command {}

menu .m.z.menu  -background blue -fg white
.m.z.menu add command -label "No Z's" \
-font $bfont -command {}

# --------------------
#       Help procedure
# --------------------
#
#
proc Help {sel} {
        global cmd
# long lines to allow msg to format things

 set h(IMCS) {
    IMCS Logging and Transfering files.

    Logging IMCS Data to a file.
    At the top of the IMCS Pixelator you will see the button
    [Start Logging]
    Before you press the button:
    1.) Type the name of the file.
    2.) The number of Minutes.
    3.) Select Quad-Cells, Motors, Temp. one,two or All.
    4.) Press the [Start Logging] Button.

    Transfering files to your PC.
    press the [Copy files] button. 
    This will bring up different.
     1.) Type the PC destination.
     2.) Press the [Send logs to] button.

   This will bring up another xterm window.
   You will see a window with password prompt. 
   Press <CR> or <ENTER>	
   At the prompt smb>
   Type: put /home/dts/log/yourfile yourfile
   Type: exit;


The Help Menu prints Help.}

        if { $sel == "commands" } {
                set h(commands) {Key    Alias
        }
                foreach name [lsort [array names cmd]] {
                        set h(commands) \
                                [format "%s\n%-7s\t%s" $h(commands) $name $cmd($
name)]
                }
        }
        tk_dialog .help "Information" $h($sel) {} -1 OK
}
